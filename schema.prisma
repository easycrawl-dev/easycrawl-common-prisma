// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../app/generated/prisma"
  // previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id
  name          String
  email         String
  emailVerified Boolean   @default(false)
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  sessions      Session[]
  accounts      Account[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  @@map("account")
}

model Verification {
  id         String   @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  @@map("verification")
}

model EcUserApiKey {
  id        String   @id @default(uuid())
  userId    String
  apiKey    String   @unique
  createdAt DateTime @default(now())
  isExpired Boolean  @default(false)
  expiredAt DateTime?
  @@map("ec_user_api_key")
}

model EcInvoice {
  id                String   @id @default(uuid())
  userId            String
  userEmail         String?
  userName          String?
  // 商品信息
  packageType       String
  packageName       String
  packagePrice      String
  packageQuantity   Int
  // 总价
  totalPrice        String
  // 折扣信息
  discountCode      String?
  discountAmount    String?
  // 支付信息
  amount            String
  isPaid            Boolean  @default(false)
  paidAt            DateTime?
  paymentMethod     String?
  paymentDate       DateTime?
  transactionId     String?
  // 其他信息
  createdAt         DateTime @default(now())
  updatedAt         DateTime @default(now()) @updatedAt
  @@map("ec_invoice")
}

model EcPackage {
  id                    String   @id @default(uuid())
  userId                String
  invoiceId             String
  // 商品信息
  packageType           String
  name                  String
  // 状态信息
  isActive              Boolean  @default(false)
  credits               Int      @default(0)
  usedCredits           Int      @default(0)
  priorityQueueDays     Int      @default(0)
  usedPriorityQueueDays Int      @default(0)
  expirationDate        DateTime?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @default(now()) @updatedAt
  expiredAt             DateTime?
  @@map("ec_package")
}